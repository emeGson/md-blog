import type { NextPage } from 'next'
import Head from 'next/head'
import { useState } from 'react'
import ContentEditable from "react-contenteditable";
import markdown_it from 'markdown-it'
import { HtmlRenderer, Parser,  } from 'commonmark'

const Home: NextPage = () => {
  const [text, setText] = useState('')
  const [html, setHtml] = useState('')



  const parseText = (text: string) => {
    /* const markdownGen = markdown_it('commonmark', {
      xhtmlOut: true,
      typographer:true
    })
    const html = markdownGen.render(text)
    console.log("ðŸš€ ~ file: index.tsx ~ line 25 ~ parseText ~ html", html) */

    const reader = new Parser({ smart: false, time: true })
    const reptext = text.replaceAll('*', '*')
    const md = reader.parse(reptext)
    console.log("ðŸš€ ~ file: index.tsx ~ line 23 ~ parseText ~ md", md)
    const writer = new HtmlRenderer({})
    const html = writer.render(md)
    console.log("ðŸš€ ~ file: index.tsx ~ line 26 ~ parseText ~ html", html)
    
    setHtml(html)
    setText(text)
  }

  return (
    <div className="bg-gray-900 h-screen w-screen flex flex-row">
      <Head>
        <title>Markdown driven blog writer</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ContentEditable
        className='w-3/4 bg-gray-700 h-full mx-auto outline-none text-gray-400'
        html={text}
        onChange={(newtext) => { parseText(newtext.target.value) }}
      />
      <ContentEditable
        className='w-1/4 bg-gray-600 h-full mx-auto outline-none text-gray-400'
        html={html}
        disabled={true}
        onChange={(_) => { }}
      />
    </div>
  )
}

export default Home
